{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","isLoading","hits","payload","nbPages","filter","story","objectID","query","page","nextPage","prevPage","Error","concat","initialState","AppContext","React","createContext","AppProvider","_ref","children","dispatch","useReducer","useEffect","async","response","fetch","url","data","json","error","console","log","fetchStories","createElement","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","num_comments","points","author","key","href","rel","onClick","Buttons","disabled","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cca6740.chunk.js","sourcesContent":["import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, isLoading: true }\n    case SET_STORIES:\n      return {\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages,\n      }\n    case REMOVE_STORY:\n      return {\n        ...state,\n        hits: state.hits.filter((story) => story.objectID !== action.payload),\n      }\n    case HANDLE_SEARCH:\n      return { ...state, query: action.payload, page: 0 }\n    case HANDLE_PAGE:\n      if (action.payload === 'inc') {\n        let nextPage = state.page + 1\n        if (nextPage > state.nbPages - 1) {\n          nextPage = 0\n        }\n        return { ...state, page: nextPage }\n      }\n      if (action.payload === 'dec') {\n        let prevPage = state.page - 1\n        if (prevPage < 0) {\n          prevPage = state.nbPages - 1\n        }\n        return { ...state, page: prevPage }\n      }\n    default:\n      throw new Error(`no mathching \"${action.type}\" action type`)\n  }\n}\nexport default reducer\n","export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import React, { useContext, useEffect, useReducer } from 'react'\nimport { SET_LOADING, SET_STORIES, REMOVE_STORY, HANDLE_PAGE, HANDLE_SEARCH } from './actions'\nimport reducer from './reducer'\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages: 0,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const fetchStories = async (url) => {\n    dispatch({ type: SET_LOADING })\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n      dispatch({\n        type: SET_STORIES,\n        payload: { hits: data.hits, nbPages: data.nbPages },\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const removeStory = (id) => {\n    dispatch({ type: REMOVE_STORY, payload: id })\n  }\n  const handleSearch = (query) => {\n    dispatch({ type: HANDLE_SEARCH, payload: query })\n  }\n  const handlePage = (value) => {\n    dispatch({ type: HANDLE_PAGE, payload: value })\n  }\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`)\n  }, [state.query, state.page])\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, removeStory, handleSearch, handlePage }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SearchForm = () => {\n  const { query, handleSearch } = useGlobalContext()\n\n  return (\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\n      <h2>search hacker news</h2>\n      <input\n        type='text'\n        className='form-input'\n        value={query}\n        onChange={(e) => handleSearch(e.target.value)}\n      />\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Stories = () => {\n  const { isLoading, hits, removeStory } = useGlobalContext()\n\n  if (isLoading) {\n    return <div className='loading'></div>\n  }\n  return (\n    <section className='stories'>\n      {hits.map((story) => {\n        const { objectID, title, num_comments, url, points, author } = story\n        return (\n          <article key={objectID} className='story'>\n            <h4 className='title'>{title}</h4>\n            <p className='info'>\n              {points} points by <span>{author} | </span> {num_comments}{' '}\n              comments\n            </p>\n            <div>\n              <a\n                href={url}\n                className='read-link'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                read article\n              </a>\n              <button\n                className='remove-btn'\n                onClick={() => removeStory(objectID)}\n              >\n                remove\n              </button>\n            </div>\n          </article>\n        )\n      })}\n    </section>\n  )\n}\n\nexport default Stories\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Buttons = () => {\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext()\n\n  return (\n    <div className='btn-container'>\n      <button disabled={isLoading} onClick={() => handlePage('dec')}>\n        prev\n      </button>\n      <p>\n        {page + 1} of {nbPages}\n      </p>\n      <button disabled={isLoading} onClick={() => handlePage('inc')}>\n        next\n      </button>\n    </div>\n  )\n}\n\nexport default Buttons","import React from 'react'\nimport SearchForm from './SearchForm'\nimport Stories from './Stories'\nimport Buttons from './Buttons'\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}